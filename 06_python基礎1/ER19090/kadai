{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "python基礎1課題.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "\n",
        "def sigmoid(x):\n",
        "  return 1/(1+np.exp(-x))\n",
        "\n",
        "def softmax(x):\n",
        "  exp_x = np.exp(x)\n",
        "  sum_exp_x = np.sum(exp_x)\n",
        "  return exp_x/sum_exp_x\n",
        "\n",
        "def tanh(x):\n",
        "  ex_p1 = np.exp(x)-np.exp(-x)\n",
        "  ex_p2 = np.exp(x)+np.exp(-x)\n",
        "  return ex_p1/ex_p2\n",
        "\n",
        "x=np.arange(-5.0,5.0,0.1)\n",
        "y1=sigmoid(x)\n",
        "y2=softmax(x)\n",
        "y3=tanh(x)\n",
        "\n",
        "plt.plot(x,y1,label='sigmoid',color='k')\n",
        "plt.plot(x,y2,label='softmax',color='r')\n",
        "plt.plot(x,y3,label='tanh',color='b')\n",
        "\n",
        "plt.ylim(-1.1,1.1)\n",
        "plt.xlabel('x')\n",
        "plt.ylabel('y')\n",
        "plt.legend()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 279
        },
        "id": "2W13UP4GmKaI",
        "outputId": "70c6f6ec-5312-4a61-efeb-8bd2be48ab21"
      },
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 287
        },
        "id": "XmuJGWEa75Ob",
        "outputId": "320673c4-523f-43cd-b282-f02f490ee549"
      },
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        },
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(512, 550, 3)\n"
          ]
        }
      ],
      "source": [
        "import numpy as np\n",
        "import cv2\n",
        "from PIL import Image\n",
        "from matplotlib import pylab as plt\n",
        "\n",
        "\n",
        "#ベースの背景を作る\n",
        "img = np.zeros((512,550,3), np.uint8)\n",
        "\n",
        "\n",
        "def sankaku(img,x1,y1,x2,y2,x3,y3):\n",
        "  pts = np.array(((x1,y1), (x2,y2),(x3,y3)))\n",
        "  #最後の引数は色指定\n",
        "  img = cv2.fillPoly(img, [pts],(225,225,0))\n",
        "\n",
        "\n",
        "#上\n",
        "sankaku(img,256,100,178,250,328,250)\n",
        "\n",
        "#右\n",
        "sankaku(img,256,400,400,400,328,250)\n",
        "\n",
        "#左\n",
        "sankaku(img,100,400,178,250,256,400)\n",
        "\n",
        "\n",
        "# 画像の表示\n",
        "plt.imshow(img)\n",
        "plt.show()\n",
        "print(img.shape)\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "5Lv-_TGo78XZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "h6oagxKe78gl"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}
